// Mocks generated by Mockito 5.4.4 from annotations
// in studle/test/mocks/generated_mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:result_dart/result_dart.dart' as _i2;
import 'package:studle/src/core/exceptions/exceptions.dart' as _i5;
import 'package:studle/src/core/services/local_storage/domain/services/i_local_storage_service.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeResult_0<S extends Object, F extends Object> extends _i1.SmartFake
    implements _i2.Result<S, F> {
  _FakeResult_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ILocalStorageService].
///
/// See the documentation for Mockito's code generation for more information.
class MockILocalStorageService extends _i1.Mock
    implements _i3.ILocalStorageService {
  @override
  _i4.Future<_i2.Result<T, _i5.GenericException>> read<T extends Object>(
          String? key) =>
      (super.noSuchMethod(
        Invocation.method(
          #read,
          [key],
        ),
        returnValue: _i4.Future<_i2.Result<T, _i5.GenericException>>.value(
            _FakeResult_0<T, _i5.GenericException>(
          this,
          Invocation.method(
            #read,
            [key],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Result<T, _i5.GenericException>>.value(
                _FakeResult_0<T, _i5.GenericException>(
          this,
          Invocation.method(
            #read,
            [key],
          ),
        )),
      ) as _i4.Future<_i2.Result<T, _i5.GenericException>>);

  @override
  _i4.Future<_i2.Result<bool, _i5.GenericException>> delete(String? key) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [key],
        ),
        returnValue: _i4.Future<_i2.Result<bool, _i5.GenericException>>.value(
            _FakeResult_0<bool, _i5.GenericException>(
          this,
          Invocation.method(
            #delete,
            [key],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Result<bool, _i5.GenericException>>.value(
                _FakeResult_0<bool, _i5.GenericException>(
          this,
          Invocation.method(
            #delete,
            [key],
          ),
        )),
      ) as _i4.Future<_i2.Result<bool, _i5.GenericException>>);

  @override
  _i4.Future<_i2.Result<bool, _i5.GenericException>> deleteAll() =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteAll,
          [],
        ),
        returnValue: _i4.Future<_i2.Result<bool, _i5.GenericException>>.value(
            _FakeResult_0<bool, _i5.GenericException>(
          this,
          Invocation.method(
            #deleteAll,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Result<bool, _i5.GenericException>>.value(
                _FakeResult_0<bool, _i5.GenericException>(
          this,
          Invocation.method(
            #deleteAll,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Result<bool, _i5.GenericException>>);

  @override
  _i4.Future<_i2.Result<bool, _i5.GenericException>> write<T extends Object?>(
    String? key,
    T? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #write,
          [
            key,
            value,
          ],
        ),
        returnValue: _i4.Future<_i2.Result<bool, _i5.GenericException>>.value(
            _FakeResult_0<bool, _i5.GenericException>(
          this,
          Invocation.method(
            #write,
            [
              key,
              value,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Result<bool, _i5.GenericException>>.value(
                _FakeResult_0<bool, _i5.GenericException>(
          this,
          Invocation.method(
            #write,
            [
              key,
              value,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Result<bool, _i5.GenericException>>);
}
